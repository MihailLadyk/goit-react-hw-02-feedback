{"version":3,"sources":["Statistics.js","FeedbackOptions.js","Section.js","Notification.js","App.js","index.js"],"names":["Statistics","props","upvotes","downvotes","neutral","total","percentage","VoteOptions","options","map","elem","type","onClick","onVote","v4","Section","children","Notification","App","state","handleVote","option","setState","prevState","calaculateTotalVotes","countPositiveFeedbackPercentage","totalVotes","this","title","message","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kOAEe,SAASA,EAAWC,GACjC,OACE,gCACE,0CAAaA,EAAMC,WACnB,4CAAeD,EAAME,aACrB,0CAAaF,EAAMG,WACnB,wCAAWH,EAAMI,SACjB,oDAAuBJ,EAAMK,WAA7B,U,YCNS,SAASC,EAAYN,GAClC,OACE,8BACGA,EAAMO,QAAQC,KAAI,SAACC,GAAD,OACjB,wBAAkBC,KAAK,SAASC,QAAS,kBAAMX,EAAMY,OAAOH,IAA5D,SACGA,GADUI,oBCLN,SAASC,EAAQd,GAC9B,OACE,gCACE,uDACCA,EAAMe,YCFE,SAASC,IACpB,OACI,8BACI,wD,ICDSC,E,4MACnBC,MAAQ,CACNjB,QAAS,EACTE,QAAS,EACTD,UAAW,G,EAKbiB,WAAa,SAACC,GACZ,EAAKC,UAAS,SAACC,GACb,OAAO,eACJF,EAASE,EAAUF,GAAU,O,EAKpCG,qBAAuB,WACrB,OAAO,EAAKL,MAAMjB,QAAU,EAAKiB,MAAMhB,UAAY,EAAKgB,MAAMf,S,EAEhEqB,gCAAkC,WAChC,OAAQ,EAAKN,MAAMjB,QAAU,EAAKsB,uBAA0B,K,uDAI5D,IAAME,EAAaC,KAAKH,uBAClBlB,EAAaqB,KAAKF,kCACxB,OACE,gCACE,eAACV,EAAD,CAASa,MAAM,GAAf,UACE,cAAC,EAAD,CACEpB,QAAS,CAAC,UAAW,YAAa,WAClCK,OAAQc,KAAKP,aAGf,4CAECO,KAAKR,MAAMjB,SACZyB,KAAKR,MAAMhB,WACXwB,KAAKR,MAAMf,QAAU,EACnB,cAACJ,EAAD,CACEE,QAASyB,KAAKR,MAAMjB,QACpBC,UAAWwB,KAAKR,MAAMhB,UACtBC,QAASuB,KAAKR,MAAMf,QACpBC,MAAOqB,EACPpB,WAAYA,IAGd,cAACW,EAAD,CAAcY,QAAS,cAI3B,8B,GApDyBC,aCAjCC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.5eba9b19.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport default function Statistics(props) {\r\n  return (\r\n    <div>\r\n      <p>Upvotes: {props.upvotes}</p>\r\n      <p>Downvotes: {props.downvotes}</p>\r\n      <p>Neutral: {props.neutral}</p>\r\n      <p>Total: {props.total}</p>\r\n      <p>Positive feedback: {props.percentage}%</p>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { v4 } from \"uuid\";\r\n\r\nexport default function VoteOptions(props) {\r\n  return (\r\n    <div>\r\n      {props.options.map((elem) => (\r\n        <button key={v4()}type=\"button\" onClick={() => props.onVote(elem)}>\r\n          {elem}\r\n        </button>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function Section(props) {\r\n  return (\r\n    <div>\r\n      <h3>Please leave feedback</h3>\r\n      {props.children}\r\n     \r\n    </div>\r\n  );\r\n}\r\n","\r\n\r\nimport React from 'react'\r\n\r\nexport default function Notification() {\r\n    return (\r\n        <div>\r\n            <p>No feedabck given :/ </p>\r\n        </div>\r\n    )\r\n}\r\n","import React, { Component } from \"react\";\nimport Statistics from \"./Statistics\";\nimport FeedbackOptions from \"./FeedbackOptions\";\nimport Section from \"./Section\";\nimport Notification from \"./Notification\";\n\nexport default class App extends Component {\n  state = {\n    upvotes: 0,\n    neutral: 0,\n    downvotes: 0,\n  };\n\n  \n\n  handleVote = (option) => {\n    this.setState((prevState) => {\n      return {\n        [option]: prevState[option] + 1,\n      };\n    });\n  };\n\n  calaculateTotalVotes = () => {\n    return this.state.upvotes + this.state.downvotes + this.state.neutral;\n  };\n  countPositiveFeedbackPercentage = () => {\n    return (this.state.upvotes / this.calaculateTotalVotes()) * 100;\n  };\n\n  render() {\n    const totalVotes = this.calaculateTotalVotes();\n    const percentage = this.countPositiveFeedbackPercentage();\n    return (\n      <div>\n        <Section title=\"\">\n          <FeedbackOptions\n            options={[\"upvotes\", \"downvotes\", \"neutral\"]}\n            onVote={this.handleVote}\n          />\n\n          <h3>Statistics</h3>\n\n          {this.state.upvotes ||\n          this.state.downvotes ||\n          this.state.neutral > 0 ? (\n            <Statistics\n              upvotes={this.state.upvotes}\n              downvotes={this.state.downvotes}\n              neutral={this.state.neutral}\n              total={totalVotes}\n              percentage={percentage}\n            />\n          ) : (\n            <Notification message={\"Hallou\"} />\n          )}\n        </Section>\n\n        <hr />\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}